=pod

=encoding UTF-8

=head1 NAME

Giovanni

=head1 VERSION

version 1.11

=head1 SYNOPSIS

Giovanni is a Perl replacement for the idea behind Capistrano. It is a
deployment system that can be used comfortably from the commandline to
check out code, restart systems and notify.
The system is currently used with git and manages some Catalyst and
Mojolicious apps and notifies via Jabber. It supports timestamped
rollouts (ie have the last 5 versions of your code on the server and link
to the currently running one) and plain git repositories. It tries to
detect problems in the deployment process and rolls back. It supports
manual rollbacks, two restart modes and does all that without any code
on the server. All you need is a working ssh setup with ssh-keys that
handle the login. 
We also use it with Jenkins to automatically deploy
code that successfully completed the test suite.

Giovanni comes with a commandline tool called gio. Check the gio manpage
for the config file format.

=head1 NAME

Giovanni - a Perl based deployment system

=head1 Usage and Settings
 
Does your app have a F<.giovanni.conf> in its root? Then you're good to go.
Just run C<gio deploy> from the root of your project and giovanni handles the
rest,  deploying the latest version of your github code to the remote machine.
 
If you run into problems you can immediately switch back to the previous
version of the software by running C<gio rollback>.
 
F<.giovanni.conf> specifies your deployment settings (note the branch is
hardcoded to C<master>), with probably the most interesting being C<root> which
is where the current and previous deployed versions are stored. There's also a
setting for the location of the git cache which prevents the remote machine
having to redownload the complete F<.git> repository every time. The C<hosts>
setting is a lists of hosts to run the deployment on, and the C<user> variable
sets the user account used for deployment.
 
For a quick example of a F<.giovanni.conf> see the F<etc/giovanni.conf> file in
this project.
 
The root directory has a set of deployments in its F<$ROOT/releases/>
directory. When you do a C<gio deploy> a new version of the code is checked out
there, named after the current unix-epoch time, and then the F<$ROOT/current>
symlink is changed to point at this directory. The currently running version of
your software is always located here. When you do a rollback this symblink is
set to point at the previous version in the release dir.

=head1 VERSION

Version 1.9

=head1 AUTHOR

Lenz Gschwendtner, C<< <norbu09 at cpan.org> >>

=head1 BUGS

Please report any bugs or feature requests to C<bug-giovanni at rt.cpan.org>, or through
the web interface at L<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Giovanni>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.

=head1 SUPPORT

You can find documentation for this module with the perldoc command.

    perldoc Giovanni

You can also look for information at:

=over 4

=item * RT: CPAN's request tracker (report bugs here)

L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Giovanni>

=item * AnnoCPAN: Annotated CPAN documentation

L<http://annocpan.org/dist/Giovanni>

=item * CPAN Ratings

L<http://cpanratings.perl.org/d/Giovanni>

=item * Search CPAN

L<http://search.cpan.org/dist/Giovanni/>

=back

=head1 ACKNOWLEDGEMENTS

=head1 LICENSE AND COPYRIGHT

Copyright 2011 Lenz Gschwendtner.

This program is free software; you can redistribute it and/or modify it
under the terms of either: the GNU General Public License as published
by the Free Software Foundation; or the Artistic License.

See http://dev.perl.org/licenses/ for more information.

=head1 AUTHOR

Lenz Gschwendtner <mail@norbu09.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by ideegeo Group Limited.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
